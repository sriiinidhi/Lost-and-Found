{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\Downloads\\\\se project\\\\Lost-and-Found-Management-System\\\\client\\\\src\\\\components\\\\AdminSignin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Signin.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Base_URL = config.baseURL;\nfunction AdminSignin() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleAdminSignIn = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const data = {\n      username: username,\n      password: password\n    };\n    try {\n      const res = await axios.post(`${Base_URL}/admin/login`, data, {\n        withCredentials: true\n      });\n      if (res.status === 401) {\n        alert(\"Invalid Credentials\");\n        return;\n      }\n      const token = res.data.token;\n      localStorage.setItem(\"adminToken\", token);\n      alert(\"Admin signed in successfully!\");\n      navigate(\"/admin/dashboard\"); // Adjust to your actual route\n    } catch (error) {\n      console.error(\"Admin login error:\", error);\n      alert(\"Invalid username or password.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"grey\"\n        },\n        children: \"Enter admin credentials to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: username,\n          onChange: handleUsernameChange,\n          placeholder: \"Enter your admin username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-signin\",\n          onClick: handleAdminSignIn,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 24\n          }, this) : \"Sign In as Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AdminSignin, \"hHXZ9470X/LJSuhtYdrvocNt5nY=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminSignin;\nexport default AdminSignin;\nvar _c;\n$RefreshReg$(_c, \"AdminSignin\");","map":{"version":3,"names":["React","useState","useNavigate","Navbar","axios","config","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Base_URL","baseURL","AdminSignin","_s","navigate","username","setUsername","password","setPassword","loading","setLoading","handleUsernameChange","e","target","value","handlePasswordChange","handleAdminSignIn","preventDefault","data","res","post","withCredentials","status","alert","token","localStorage","setItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","htmlFor","type","id","name","onChange","placeholder","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/srini/Downloads/se project/Lost-and-Found-Management-System/client/src/components/AdminSignin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Signin.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport axios from \"axios\";\r\nimport config from \"./config\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst Base_URL = config.baseURL;\r\n\r\nfunction AdminSignin() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAdminSignIn = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`${Base_URL}/admin/login`, data, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      if (res.status === 401) {\r\n        alert(\"Invalid Credentials\");\r\n        return;\r\n      }\r\n\r\n      const token = res.data.token;\r\n      localStorage.setItem(\"adminToken\", token);\r\n\r\n      alert(\"Admin signed in successfully!\");\r\n      navigate(\"/admin/dashboard\"); // Adjust to your actual route\r\n    } catch (error) {\r\n      console.error(\"Admin login error:\", error);\r\n      alert(\"Invalid username or password.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"signin-container\">\r\n        <h2>Admin Sign In</h2>\r\n        <p style={{ color: \"grey\" }}>Enter admin credentials to continue</p>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n            placeholder=\"Enter your admin username\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            placeholder=\"Enter your password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn-signin\"\r\n            onClick={handleAdminSignIn}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <Spinner /> : \"Sign In as Admin\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminSignin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}