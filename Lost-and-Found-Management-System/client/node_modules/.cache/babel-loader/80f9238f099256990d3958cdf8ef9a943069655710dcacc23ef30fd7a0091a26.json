{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\Downloads\\\\se project\\\\Lost-and-Found-Management-System\\\\client\\\\src\\\\components\\\\HelperList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DisplayCardHelper from \"./DisplayCardHelper\";\nimport Navbar from \"./Navbar\";\nimport config from \"./config\";\nimport Spinner from \"./Spinner\"; // Import the Spinner component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Base_URL = config.baseURL;\nconst HelperList = () => {\n  _s();\n  const [helpers, setHelpers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchHelpers();\n  }, []);\n  const fetchHelpers = async () => {\n    try {\n      const res = await axios.get(`${Base_URL}/helper`);\n      setHelpers(res.data.gotHelper);\n    } catch (error) {\n      console.error(\"Error fetching helpers:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Helpers List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : helpers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"*No helpers found*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : helpers.map((helper, index) => /*#__PURE__*/_jsxDEV(DisplayCardHelper, {\n        helper: helper,\n        number: index + 1\n      }, helper._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HelperList, \"U8J0kWWoLPQW2b6y0+V9gu6wk/Y=\");\n_c = HelperList;\nexport default HelperList;\nvar _c;\n$RefreshReg$(_c, \"HelperList\");","map":{"version":3,"names":["React","useState","useEffect","axios","DisplayCardHelper","Navbar","config","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Base_URL","baseURL","HelperList","_s","helpers","setHelpers","isLoading","setIsLoading","fetchHelpers","res","get","data","gotHelper","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","helper","index","number","_id","_c","$RefreshReg$"],"sources":["C:/Users/srini/Downloads/se project/Lost-and-Found-Management-System/client/src/components/HelperList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayCardHelper from \"./DisplayCardHelper\";\r\nimport Navbar from \"./Navbar\";\r\nimport config from \"./config\";\r\nimport Spinner from \"./Spinner\"; // Import the Spinner component\r\n\r\nconst Base_URL = config.baseURL;\r\n\r\nconst HelperList = () => {\r\n  const [helpers, setHelpers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchHelpers();\r\n  }, []);\r\n\r\n  const fetchHelpers = async () => {\r\n    try {\r\n      const res = await axios.get(`${Base_URL}/helper`);\r\n      setHelpers(res.data.gotHelper);\r\n    } catch (error) {\r\n      console.error(\"Error fetching helpers:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>\r\n        <h1>Helpers List:</h1>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : helpers.length === 0 ? (\r\n          <p>*No helpers found*</p>\r\n        ) : (\r\n          helpers.map((helper, index) => (\r\n            <DisplayCardHelper\r\n              key={helper._id}\r\n              helper={helper}\r\n              number={index + 1}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelperList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,QAAQ,GAAGN,MAAM,CAACO,OAAO;AAE/B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGV,QAAQ,SAAS,CAAC;MACjDK,UAAU,CAACI,GAAG,CAACE,IAAI,CAACC,SAAS,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBb,SAAS,gBACRT,OAAA,CAACF,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACTf,OAAO,CAACgB,MAAM,KAAK,CAAC,gBACtBvB,OAAA;QAAAkB,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEzBf,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxB1B,OAAA,CAACL,iBAAiB;QAEhB8B,MAAM,EAAEA,MAAO;QACfE,MAAM,EAAED,KAAK,GAAG;MAAE,GAFbD,MAAM,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACF,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAChB,EAAA,CAxCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}